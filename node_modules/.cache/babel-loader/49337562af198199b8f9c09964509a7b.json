{"ast":null,"code":"import _slicedToArray from \"/Volumes/MENDOZA/Coding/e-tracker/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Volumes/MENDOZA/Coding/e-tracker/client/src/context/GlobalState.js\";\nimport React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer'; // Initial State\n\nconst initialState = {\n  transactions: []\n}; // Create context\n\nexport const GlobalContext = createContext(initialState); // Provider component\n\nexport const GlobalProvider = ({\n  children\n}) => {\n  const _useReducer = useReducer(AppReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // Actions\n\n\n  const getTransactions = async;\n\n  const deleteTransaction = id => {\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: id\n    });\n  };\n\n  const addTransaction = transaction => {\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: transaction\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      deleteTransaction,\n      addTransaction\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Volumes/MENDOZA/Coding/e-tracker/client/src/context/GlobalState.js"],"names":["React","createContext","useReducer","AppReducer","initialState","transactions","GlobalContext","GlobalProvider","children","state","dispatch","getTransactions","async","deleteTransaction","id","type","payload","addTransaction","transaction"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE;AADK,CAArB,C,CAIA;;AACA,OAAO,MAAMC,aAAa,GAAGL,aAAa,CAACG,YAAD,CAAnC,C,CAEP;;AACA,OAAO,MAAMG,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA,sBACpBN,UAAU,CAACC,UAAD,EAAaC,YAAb,CADU;AAAA;AAAA,QACvCK,KADuC;AAAA,QAChCC,QADgC,oBAG9C;;;AACA,QAAMC,eAAe,GAAGC,KAAxB;;AAEA,QAAMC,iBAAiB,GAAIC,EAAD,IAAQ;AAChCJ,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAE,oBADC;AAEPC,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,QAAMG,cAAc,GAAIC,WAAD,IAAiB;AACtCR,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAE,iBADC;AAEPC,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,sBACE,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAC7Bb,MAAAA,YAAY,EAAEI,KAAK,CAACJ,YADS;AAE7BQ,MAAAA,iBAF6B;AAG7BI,MAAAA;AAH6B,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGT,QALH,CADF;AASD,CA7BM","sourcesContent":["import React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer'\n\n// Initial State\nconst initialState = {\n  transactions: []\n}\n\n// Create context\nexport const GlobalContext = createContext(initialState);\n\n// Provider component\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  // Actions\n  const getTransactions = async\n\n  const deleteTransaction = (id) => {\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: id\n    })\n  }\n\n  const addTransaction = (transaction) => {\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: transaction\n    })\n  }\n\n  return (\n    <GlobalContext.Provider value={{\n      transactions: state.transactions,\n      deleteTransaction,\n      addTransaction\n    }} >\n      {children}\n    </GlobalContext.Provider>\n  )\n}"]},"metadata":{},"sourceType":"module"}